server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Django app file logs
  - job_name: django-apps
    static_configs:
      - targets:
          - localhost
        labels:
          job: django-apps
          __path__: /app/logs/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            logger: logger
            message: message
            request_id: request_id
            connection_id: connection_id
            session_uuid: session_uuid
            error: error
            method: method
            path: path
            status_code: status_code
            container: container
      - timestamp:
          source: timestamp
          format: "2006-01-02T15:04:05.000Z" 
      - labels:
          level:
          logger:
          request_id:
          connection_id:
          method:
          container:

  # Individual container logs (works reliably on macOS)
  - job_name: nginx-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: nginx-logs
          container: nginx
          service: nginx
          __path__: /var/log/nginx/*.log
    pipeline_stages:
      - json:
          expressions:
            time_local: time_local
            remote_addr: remote_addr
            request: request
            status: status
            body_bytes_sent: body_bytes_sent
            request_time: request_time
            http_user_agent: http_user_agent
            request_id: request_id
      - labels:
          container:
          service:
          status:
          remote_addr:

  - job_name: redis-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: redis-logs
          container: redis
          service: redis
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>[*#\-\.]) (?P<message>.*)'
      - labels:
          container:
          service:
          level:
          role:

  - job_name: prometheus-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: prometheus-logs
          container: prometheus
          service: prometheus
          __path__: /var/log/prometheus/*.log
    pipeline_stages:
      - regex:
          expression: '^time="(?P<timestamp>[^"]+)" level=(?P<level>\w+) source=(?P<source>[^\s]+) component="(?P<component>[^"]*)" msg="(?P<message>[^"]*)"'
      - labels:
          container:
          service:
          level:
          component:

  - job_name: grafana-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: grafana-logs
          container: grafana
          service: grafana
          __path__: /var/log/grafana/*.log
    pipeline_stages:
      - regex:
          expression: '^t=(?P<timestamp>[^\s]+) lvl=(?P<level>\w+) msg="(?P<message>[^"]*)"'
      - labels:
          container:
          service:
          level:

  - job_name: loki-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: loki-logs
          container: loki
          service: loki
          __path__: /var/log/loki/*.log
    pipeline_stages:
      - regex:
          expression: '^level=(?P<level>\w+) ts=(?P<timestamp>[^\s]+) caller=(?P<caller>[^\s]+) msg="(?P<message>[^"]*)"'
      - labels:
          container:
          service:
          level:
          caller:

  - job_name: promtail-logs
    static_configs:
      - targets: [localhost]
        labels:
          job: promtail-logs
          container: promtail
          service: promtail
          __path__: /var/log/promtail/*.log
    pipeline_stages:
      - regex:
          expression: '^level=(?P<level>\w+) ts=(?P<timestamp>[^\s]+) caller=(?P<caller>[^\s]+) msg="(?P<message>[^"]*)"'
      - labels:
          container:
          service:
          level:
          caller:

 